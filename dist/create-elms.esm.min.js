/*!
 * create-elms
 * v1.0.8
 * https://github.com/jhildenbiddle/create-elms
 * (c) 2018-2019 John Hildenbiddle <http://hildenbiddle.com>
 * MIT license
 */
function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(e)}function e(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}export default function(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:window.document,i=[];function f(t){var n=[];if(t.nodeType)n=[t];else if("string"==typeof t)n=e(o.querySelectorAll(t));else if(Array.isArray(t)){var r;n=t.map(function(t){return f(t)}),n=(r=Array.prototype).concat.apply(r,e(n))}else t.length&&(n=e(t));return n}return(Array.isArray(n)?n:[n]).forEach(function(n){var a=o.createElement("div"),c=n&&"string"==typeof n,u=c?r:function e(){for(var n=function(e){return e&&"object"===t(e)},r=arguments.length,o=new Array(r),i=0;i<r;i++)o[i]=arguments[i];return o.reduce(function(t,r){return Object.keys(r).forEach(function(o){var i=t[o],f=r[o];n(i)&&n(f)?t[o]=e(i,f):t[o]=f}),t},{})}(r,n);if(c)a.innerHTML=n;else if(u.tag){var l=o.createElement(u.tag);a.appendChild(l)}e(a.children).forEach(function(t){!(t.textContent.length||t.children.length)&&(u.html?t.innerHTML=u.html:u.text&&(t.textContent=u.text)),u.attr&&Object.keys(u.attr).forEach(function(e){t.setAttribute(e,u.attr[e])}),u.appendTo?f(u.appendTo).forEach(function(e,n,r){var o=r.length>1?t.cloneNode(!0):t;i.push(e.appendChild(o))}):u.prependTo?f(u.prependTo).forEach(function(e,n,r){var o=r.length>1?t.cloneNode(!0):t;i.push(e.insertBefore(o,e.firstChild))}):u.insertBefore?f(u.insertBefore).forEach(function(e,n,r){var o=r.length>1?t.cloneNode(!0):t;i.push(e.parentNode.insertBefore(o,e))}):u.insertAfter?f(u.insertAfter).forEach(function(e,n,r){var o=r.length>1?t.cloneNode(!0):t;i.push(e.parentNode.insertBefore(o,e.nextSibling))}):i.push(t)})}),r.returnHtml?i.map(function(t){return t.outerHTML}):i}
//# sourceMappingURL=create-elms.esm.min.js.map
